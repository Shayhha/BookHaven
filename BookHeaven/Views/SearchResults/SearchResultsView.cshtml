@model BookHeaven.Models.SearchResults

@inject IHttpContextAccessor HttpContextAccessor

@{
    string isLoggedIn = HttpContextAccessor.HttpContext.Session.GetString("isLoggedIn");
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results Page</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css">
    <link rel="stylesheet" href="~/css/homePage.css?Version=6.0.1">
</head>
<body>



    @*<div class="adminButtons">

        @if (!string.IsNullOrEmpty(isLoggedIn) && isLoggedIn == "true")
        {
            @if (BookHeaven.Models.User.currentUser.isAdmin == true)
            {
                <a href="/Book/showAddNewBook" id="addNewBookButton" class="">Add New Book</a>
            }
        }



    </div>*@


    <div class="container5">

        <div class="sidenav">
            <div>
                <label for="filter" class="filter-label">Filter By:</label>
                <select id="filter" class="filter-select">
                    <option value="" disabled selected>Select an option</option>
                    <option value="A - Z" selected="@(ViewBag.FilterList.Contains("A - Z"))">A - Z</option>
                    <option value="Z - A" selected="@(ViewBag.FilterList.Contains("Z - A"))">Z - A</option>
                    <option value="Price Ascending" selected="@(ViewBag.FilterList.Contains("Price Ascending"))">Price Ascending</option>
                    <option value="Price Descending" selected="@(ViewBag.FilterList.Contains("Price Descending"))">Price Descending</option>
                    <option value="Most Popular" selected="@(ViewBag.FilterList.Contains("Most Popular"))">Most Popular</option>
                </select>
            </div>

            <div>
                <label for="filterFormat" class="filter-label">Filter Format:</label>
                <select id="filterFormat" class="filter-select">
                    <option value="" disabled selected>Select an option</option>
                    <option value="Paperback" selected="@(ViewBag.FilterList.Contains("Paperback"))">Paperback</option>
                    <option value="Hardcover" selected="@(ViewBag.FilterList.Contains("Hardcover"))">Hardcover</option>
                </select>
            </div>

            <div>
                <label for="filterPrice" class="filter-label">Filter Price:</label>
                <select id="filterPrice" class="filter-select">
                    <option value="" disabled selected>Select an option</option>
                    <option value="Less Than $10" selected="@(ViewBag.FilterList.Contains("Less Than $10"))">Less Than $10</option>
                    <option value="$10 - $20" selected="@(ViewBag.FilterList.Contains("$10 - $20"))">$10 - $20</option>
                    <option value="$20 - $30" selected="@(ViewBag.FilterList.Contains("$20 - $30"))">$20 - $30</option>
                    <option value="More Than $30" selected="@(ViewBag.FilterList.Contains("More Than $30"))">More Than $30</option>
                </select>
            </div>

            <div>
                <label for="filterPrice" class="filter-label">Filter Date:</label>
                <select id="filterPrice" class="filter-select">
                    <option value="" disabled selected>Select an option</option>
                    <option value="Before 1950" selected="@(ViewBag.FilterList.Contains("Before 1950"))">Before 1950</option>
                    <option value="1950 - 2000" selected="@(ViewBag.FilterList.Contains("1950 - 2000"))">1950 - 2000</option>
                    <option value="After 2000" selected="@(ViewBag.FilterList.Contains("After 2000"))">After 2000</option>
                </select>
            </div>

            <div>
                <label for="filterAge" class="filter-label">Filter Age:</label>
                <select id="filterAge" class="filter-select">
                    <option value="" disabled selected>Select an option</option>
                    <option value="Below 10" selected="@(ViewBag.FilterList.Contains("Below 10"))">Below 10</option>
                    <option value="10 - 18" selected="@(ViewBag.FilterList.Contains("10 - 18"))">10 - 18</option>
                    <option value="Above 18" selected="@(ViewBag.FilterList.Contains("Above 18"))">Above 18</option>
                </select>
            </div>

            <button id="filterButton" class="filterButton" onclick="filterButtonOnClick()">Filter</button>

            @{
                @*<script>
                    document.addEventListener("DOMContentLoaded", function () {
                        var filterSelects = document.getElementsByClassName("filter-select");
                        var searchQuery = document.getElementById("searchQueryString").innerText;
                        var selectedValue = "@ViewBag.SelectedFilter"; // Get the selected filter option from ViewBag

                        for (var i = 0; i < filterSelects.length; i++) {
                            filterSelects[i].addEventListener("change", function () {
                                var selectedValue = this.value;
                                console.log("Selected value: ", selectedValue);
                                console.log("Search query: ", searchQuery);
                                var editUrl = "/SearchResults/filterBooks?filterBy=" + selectedValue + "&searchQuery=" + searchQuery + "&isCategory=" + @Model.isCategory;
                                window.location.href = editUrl;
                            });

                            // Show placeholder text if no option is selected
                            filterSelects[i].addEventListener("click", function () {
                                if (this.selectedIndex === 0) {
                                    this.selectedIndex = -1;
                                }
                            });

                            // Handle blur event to reset select box if no option is selected
                            filterSelects[i].addEventListener("blur", function () {
                                if (this.selectedIndex === -1) {
                                    this.selectedIndex = 0;
                                }
                            });
                        }
                    });

                </script>*@
            }

        </div>


        <div class="row">
            <p class="fw-bold display-5 px-3 py-2">You searched for: <span id="searchQueryString">@Model.searchQuery</span></p>

            @foreach (var index in Enumerable.Range(0, Model.books.Count / 4 + (Model.books.Count % 4 == 0 ? 0 : 1)))
            {
                <div class="row">
                    @foreach (Book book in Model.books.Skip(index * 4).Take(4))
                    {
                        string sanitizedName = book.name.Replace("'", "\\'"); // Replace single quote with escaped single quote
                        <div class="col-md-3" onclick="showPopup('@book.imageUrl', '@sanitizedName', '@book.author', '@book.date', @book.bookId, '@book.category', '@book.format', '@book.ageLimitation', @book.price, @book.stock, @book.salePrice)">
                            <div class="item">
                                <img src="@book.imageUrl" alt="Image" class="img-fluid">
                                <span class="item-title">@book.name</span>
                                <p>Date: @book.date</p>
                                <p>Genre: @book.category</p>
                                <p>Stock: @book.stock</p>
                                @if (book.price != book.salePrice && book.salePrice != 0)
                                {
                                    <p>Price: <strong>$@book.salePrice</strong> <strike>$@book.price</strike></p>
                                }
                                else
                                {
                                    <p>Price: $@book.price</p>

                                }
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>

    <div class="overlay" id="overlay" onclick="closePopup()"></div>

    <div class="popup" id="popup">
        <span class="close" onclick="closePopup()">❌</span>
        <div class="popup-content">
            <div class="popup-image">
                <img id="popup-image" src="" alt="Book Image">
            </div>
            <div class="popup-details">
                <h2 id="popup-title"></h2>
                <p><strong>Author: </strong><span id="popup-author"></span></p>
                <p><strong>Release Date: </strong><span id="popup-date"></span></p>
                <p><strong>Book Id: </strong><span id="popup-bookId"></span></p>
                <p><strong>Category: </strong><span id="popup-category"></span></p>
                <p><strong>Format: </strong><span id="popup-format"></span></p>
                <p><strong>Age Limitation: </strong><span id="popup-age"></span></p>
                <p><strong>Price: </strong><span id="popup-price"></span></p>
                <p><strong>In-Stock: </strong><span id="popup-stock"></span></p>
            </div>
        </div>

        <div class="popup-buttons">

            @if (!string.IsNullOrEmpty(isLoggedIn) && isLoggedIn == "true")
            {
                @if (BookHeaven.Models.User.currentUser.isAdmin == true)
                {
                    <button id="bookEditButton" class="buttonBlueColor" onclick="editBook()">Edit</button>
                    <button id="bookDeleteButton" class="buttonRedColor" onclick="if(confirmDelete()) deleteBook()">Delete Book</button>
                    <button id="bookInfoPageButton" class="buttonBlueColor" onclick="goToBookInfoPage()">Book Info Page</button>
                }
            }
            else
            {
                <button id="bookInfoPageButton" class="buttonBlueColor" onclick="goToBookInfoPage()">Book Info Page</button>
                <button id="bookNotifyMeButton" class="buttonBlueColor" onclick="showNotifyMessage()">Notify Me</button>
            }
        </div>
    </div>

    <script src="~/js/site.js"></script>
</body>
</html>

