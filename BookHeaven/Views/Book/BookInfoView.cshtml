@model BookHeaven.Models.Book;

@inject IHttpContextAccessor HttpContextAccessor

@{
    string isLoggedIn = HttpContextAccessor.HttpContext.Session.GetString("isLoggedIn");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BookHeaven</title>
    <link rel="stylesheet" href="~/css/bookPages.css?Version=2">
</head>
<body>
    <div class="container">
        <div class="image-side">
            <img src="@Model.imageUrl" alt="Book Image">
        </div>
        <div class="content-side">
            <h2>@Model.name</h2>
            <div class="book-info">
                <p><strong>Author: </strong>@Model.author</p>
                <p><strong>Release Date: </strong>@Model.date</p>
                <p><strong>Book Id: </strong><span id="popup-bookId">@Model.bookId</span></p>
                <p><strong>Category: </strong>@Model.category</p>
                <p><strong>Format: </strong>@Model.format</p>
                <p><strong>Age Limitation: </strong>@Model.ageLimitation</p>
                <p><strong>Price: </strong>@Model.price</p>
                <p><strong>In-Stock: </strong>@Model.stock</p>
            </div>
            <div class="buttons">
                @if (!string.IsNullOrEmpty(isLoggedIn) && isLoggedIn == "true")
                {
                    @if (BookHeaven.Models.User.currentUser.isAdmin == true)
                    {
                        <button id="bookEditButton" class="buttonBlueColor" onclick="editBook()">Edit</button>
                        <button id="bookDeleteButton" class="buttonRedColor" onclick="if(confirmDelete()) deleteBook2()">Delete Book</button>

                        <div style="display:inline-flex">
                            <input type="number" class="bookViewInput" id="salePrice" name="salePrice" value="@Model.price">
                            <script>document.getElementById("salePrice").addEventListener("input", function () {
                                    var max = parseFloat(@Model.price);
                                    if (parseFloat(this.value) > max) {
                                        this.value = max; // Set value to maximum if it exceeds the maximum allowed
                                    }
                                });</script>
                            <button id="bookPutOnSaleButton" class="buttonBlueColor" onclick="putBookOnSale()">Put On Sale</button>
                        </div>

                        if (Model.stock < 200)
                        {
                            <div style="display:inline-flex">
                                <input type="number" class="bookViewInput" id="restockAmount" name="restockAmount" value="0" min="0" max="800" />
                                <script>document.getElementById("restockAmount").addEventListener("input", function () {
                                        var max = parseFloat(this.getAttribute("max"));
                                        if (parseFloat(this.value) > max) {
                                            this.value = max; // Set value to maximum if it exceeds the maximum allowed
                                        }
                                    });
                                </script>
                                <button id="bookRestockButton" class="buttonBlueColor" onclick="restockBook()">Restock</button>
                            </div>
                        }
                    }
                    else
                    {
                        if (@Model.stock == 0)
                        {
                            <button id="bookNotifyMeButton" class="buttonBlueColor">Notify Me</button>
                        }
                        else
                        {
                            <button id="bookAddToCartButton" class="buttonBlueColor" onclick="addBookToCart()">Add to Cart</button>
                            <button id="bookBuyNowButton" class="buttonBlueColor" onclick="buyBook()">Buy Now</button>
                        }
                    }
                }
                else
                {
                    if (@Model.stock == 0)
                    {
                        <button id="bookNotifyMeButton" class="buttonBlueColor">Notify Me</button>
                    }
                    else
                    {
                        <button id="bookAddToCartButton" class="buttonBlueColor" onclick="addBookToCart()">Add to Cart</button>
                        <button id="bookBuyNowButton" class="buttonBlueColor" onclick="buyBook()">Buy Now</button>
                    }
                }
            </div>
        </div>
    </div>

    <script src="~/js/site.js"></script>
</body>
</html>
